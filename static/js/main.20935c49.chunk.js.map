{"version":3,"sources":["utils/index.js","redux/store.js","redux/localStorage.js","components/Alert.jsx","components/TaskTimer.jsx","redux/actionCreators.js","components/Panel.jsx","components/TasksLog.jsx","components/TasksChart.jsx","components/NotFound.jsx","components/Task.jsx","TimerApp.js","index.js"],"names":["leadingZero","n","length","formatTime","values","Math","floor","map","join","msecs2time","msecs","Date","toTimeString","replace","aggregateIntervals","tasks","startOfDay","setHours","valueOf","taskIntervals","reduce","arr","startTime","endTime","durations","intervals","Array","v","i","is","ie","duration","startedInInterval","s","e","push","name","Minutes","generateTasks","tasksNumber","random","id","v4","title","initialState","serializedState","localStorage","getItem","JSON","parse","loadState","timer","isStarted","rootReducer","combineReducers","state","action","type","now","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","Alert","props","isOpen","message","onClick","Dialog","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","defaultProps","TaskTimer","handleInput","event","setState","input","target","value","handleError","prev","error","setTimeout","textInput","current","focus","handleStart","start","interval","setInterval","counter","handleStop","Error","stop","clearInterval","componentDidMount","componentWillUnmount","time","React","createRef","startButton","variant","this","stopButton","className","TextField","label","onChange","inputRef","Component","connect","Panel","currentTab","history","Tabs","indicatorColor","textColor","aria-label","Tab","withRouter","TasksLog","handleDeletion","deleteTask","TableContainer","Table","size","TableHead","TableRow","TableCell","align","TableBody","task","index","key","to","Chart","generate","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","fill","NotFound","useStyles","makeStyles","root","maxWidth","fontSize","Task","match","find","params","classes","Card","CardContent","Typography","component","gutterBottom","CardActions","App","path","Paper","square","TasksChart","rootElement","document","getElementById","ReactDOM","render","TimerApp","test"],"mappings":"mRAGMA,EAAc,SAACC,GAAD,OAA0B,IAAlB,UAAGA,GAAIC,OAAP,WAA0BD,GAA1B,UAAmCA,IAMlDE,EAAa,SAACC,GAIzB,MAAO,CAHOC,KAAKC,MAAMF,EAAS,MAClBC,KAAKC,MAAOF,EAAS,KAAQ,IAC5BA,EAAS,KAAQ,IACDG,IAAIP,GAAaQ,KAAK,MAG5CC,EAAa,SAACC,GAAD,OAAW,IAAIC,KAAKD,GAAOE,eAAeC,QAAQ,SAAU,KAEzEC,EAAqB,SAACC,GACjC,IAAMC,GAAa,IAAIL,MAAOM,SAAS,EAAG,EAAG,EAAG,GAAGC,UAE7CC,EAAgBJ,EAAMK,QAAO,SAACC,EAAD,OAAQC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAAnB,4BAC9BF,GAD8B,CAEjC,EAAEC,EAAYN,GAAc,KAAQO,EAAUP,GAAc,SAC9D,IAEMQ,EAAY,GAEZC,EAAY,YAAIC,MAAM,KAAKnB,KAAI,SAACoB,EAAGC,GAAJ,MAAW,CAAK,GAAJA,EAAY,GAAJA,EAAS,OAVvB,uBAY3C,IAZ2C,IAY3C,EAZ2C,0CAY/BC,EAZ+B,KAY3BC,EAZ2B,KAarCC,EAAW,EAETC,EAAoBb,EAAcC,QAAO,SAACC,EAAD,EAAcO,GAAd,uBAAOK,EAAP,KAAUC,EAAV,YAC7CD,GAAKJ,GAAMI,EAAIH,EAAf,sBAAwBT,GAAxB,CAA6B,CAACY,EAAGC,EAAGN,KAAMP,IACzC,IAEH,GAAIW,EAAkB9B,OAAS,EAAG,CAAC,IAAD,uBAChC,YAAwB8B,EAAxB,+CAA2C,CAAC,IAAD,yBAA/BC,EAA+B,KAA5BC,EAA4B,KAAzBN,EAAyB,KACrCM,EAAIJ,EACNC,GAAYG,EAAID,GAEhBF,GAAYD,EAAKG,EACjBd,EAAcS,GAAK,CAACE,EAAII,KANI,mFAWlCV,EAAUW,KAAKJ,IAlBjB,EAAuBN,EAAvB,+CAAmC,IAZQ,kFAiC3C,OAAO,YAAIC,MAAM,KAAKnB,KAAI,SAACoB,EAAGC,GAAJ,MAAW,CACnCQ,KAAK,GAAD,OAAKR,EAAI,GACbS,QAASb,EAAUI,QAWVU,EAAgB,WAO3B,IANA,IAAMC,EAAclC,KAAKC,MAAM,EAAAD,KAAKmC,SAAuB,IAEvDlB,EAA4D,GAAhDjB,KAAKC,MAAM,IAAAD,KAAKmC,SAAyB,KAAY,KA9DvC,IAAI7B,MAAOM,SAAS,EAAG,EAAG,EAAG,GAAGC,UAgExDH,EAAQ,GAELa,EAAI,EAAGA,EAAIW,EAAaX,GAAK,EAAG,CAEvC,IAAML,GADND,GAVmE,GAA3CjB,KAAKC,MAAM,GAAAD,KAAKmC,SAAsB,GAAU,KAHzD,GADDnC,KAAKC,MAAM,GAAAD,KAAKmC,SAAuB,IACjC,IAgBpBzB,EAAMoB,KAAK,CACTM,GAAIC,cACJC,MAAM,QAAD,OAAUf,EAAI,GACnBN,YACAC,YAGFD,EAAYC,EAGd,OAAOR,GCtEH6B,ECfmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOX,GACP,QDSiBgB,IARA,CACnBC,MAAO,CACLC,WAAW,EACX9B,UAAW,EACXP,MAAO,KAmDLsC,EAAcC,YAAgB,CAAEH,MA7CxB,WAAyC,IAAxCI,EAAuC,uDAA/BX,EAAaO,MAAOK,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,eACFF,EADL,CAEEH,WAAW,EACX9B,UAAWX,KAAK+C,QAIpB,IAAK,OACH,MAAO,CACLN,WAAW,EACX9B,UAAW,EACXP,MAAM,GAAD,mBACAwC,EAAMxC,OADN,CAEH,CACE0B,GAAIC,cACJC,MAAOa,EAAOb,MACdrB,UAAWiC,EAAMjC,UACjBC,QAASZ,KAAK+C,UAMtB,IAAK,SACH,OAAO,eACFH,EADL,CAEExC,MAAOwC,EAAMxC,MAAM4C,QAAO,qBAAGlB,KAAgBe,EAAOf,QAIxD,IAAK,WACH,OAAO,eACFc,EADL,CAEExC,MAAOuB,MAIX,QACE,OAAOiB,MAMPK,EAAQC,YACZR,EAEAS,OAAOC,8BAAgCD,OAAOC,gCAGhDH,EAAMI,WAAU,kBC5DS,SAACT,GACxB,IACE,IAAMV,EAAkBG,KAAKiB,UAAUV,GACvCT,aAAaoB,QAAQ,QAASrB,GAC9B,MAAOX,KDwDWiC,CAAUP,EAAMQ,eAEvBR,Q,kIE5DTS,EAAQ,SAACC,GAAW,IAChBC,EAA6BD,EAA7BC,OAAQC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QAEzB,OACE,kBAACC,EAAA,EAAD,CAAQC,KAAMJ,EAAQK,kBAAgB,uBACpC,kBAACC,EAAA,EAAD,CAAapC,GAAG,uBAAhB,SACA,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBtC,GAAG,4BACnB+B,IAGL,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQR,QAASA,EAASS,MAAM,UAAUC,WAAS,GAAnD,SASRd,EAAMe,aAAe,CACnBb,QAAQ,EACRC,QAAS,GACTC,QAAS,cASIJ,QCjCTgB,E,YACJ,WAAYf,GAAQ,IAAD,uBACjB,4CAAMA,KAWRgB,YAAc,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,SAZxC,EAcnBC,YAAc,WACZ,EAAKJ,UAAS,SAAAK,GAAI,sBAAUA,EAAV,CAAgBC,MAAO,UAEzCC,YAAW,kBAAM,EAAKC,UAAUC,QAAQC,UAAS,IAjBhC,EAoBnBC,YAAc,WACZ,EAAK7B,MAAM8B,QACX,EAAKC,SAAWC,aAAY,WAC1B,EAAKd,UAAS,kBAAyB,CAAEC,MAA3B,EAAGA,MAA+Bc,QAAlC,EAAUA,QAA2C,QAClE,MAxBc,EA2BnBC,WAAa,WAAO,IACVf,EAAU,EAAKlC,MAAfkC,MACR,IAAKA,EAAO,OAAO,EAAKD,UAAS,SAAAK,GAAI,sBAChCA,EADgC,CAEnCC,MAAO,IAAIW,MAAM,qCAGnB,EAAKnC,MAAMoC,KAAKjB,GAEhB,EAAKD,SAAS,CAAEC,MAAO,GAAIc,QAAS,IAEpCI,cAAc,EAAKN,WAtCF,EAyCnBO,kBAAoB,WAAO,IAAD,EACS,EAAKtC,MAA9BlB,EADgB,EAChBA,UAAW9B,EADK,EACLA,UACf8B,IACF,EAAKiD,SAAWC,aAAY,WAC1B,IAAMC,EAAUlG,KAAKC,OAAOK,KAAK+C,MAAQpC,GAAa,KACtD,EAAKkE,UAAS,kBAAgB,CAAEC,MAAlB,EAAGA,MAAsBc,gBACtC,OA/CY,EAmDnBM,qBAAuB,kBAAMF,cAAc,EAAKN,WAnD7B,IJNYS,EIMZ,EAGgB,EAAKxC,MAA9BlB,EAHS,EAGTA,UAAW9B,EAHF,EAGEA,UAEbiF,EAAUnD,GJXa0D,EIWgBxF,EJXPjB,KAAKC,OAAOK,KAAK+C,MAAQoD,GAAQ,MIWb,EALzC,OAOjB,EAAKvD,MAAQ,CAAEkC,MAAO,GAAIc,UAAST,MAAO,MAE1C,EAAKE,UAAYe,IAAMC,YATN,E,sEAsDjB,IAAMC,EAAc,kBAAChC,EAAA,EAAD,CAAQiC,QAAQ,YAAYzC,QAAS0C,KAAKhB,aAA1C,SACdiB,EAAa,kBAACnC,EAAA,EAAD,CAAQiC,QAAQ,YAAYzC,QAAS0C,KAAKX,YAA1C,QAEXpD,EAAc+D,KAAK7C,MAAnBlB,UAJD,EAK2B+D,KAAK5D,MAA/BkC,EALD,EAKCA,MAAOc,EALR,EAKQA,QAAST,EALjB,EAKiBA,MAExB,OACE,yBAAKuB,UAAU,SACb,kBAAC,EAAD,CAAO9C,SAAUuB,EAAOtB,QAASsB,GAASA,EAAMtB,QAASC,QAAS0C,KAAKvB,cACvE,kBAAC0B,EAAA,EAAD,CACE7E,GAAG,iBACH8E,MAAM,YACNC,SAAUL,KAAK7B,YACfK,MAAOF,EACPgC,SAAUN,KAAKnB,YAEjB,yBAAKqB,UAAU,SAASlH,EAAWoG,IAEjCnD,EAAYgE,EAAaH,O,GAzEXF,IAAMW,WA+E9BrC,EAAUD,aAAe,CACvBhC,WAAW,EACX9B,UAAW,GAQb,IAEeqG,eAFS,SAAC,GAAD,QAAGxE,MAAH,MAA0C,CAAEC,UAA5C,EAAYA,UAA2C9B,UAAvD,EAAuBA,aAEP,CAAE8E,MCvGrB,iBAAO,CAAE3C,KAAM,UDuGaiD,KCrG7B,SAAC/D,GAAD,MAAY,CAAEc,KAAM,OAAQd,WDqGjCgF,CAA0CtC,G,kBEjGnDuC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAAf,OACZ,kBAACC,EAAA,EAAD,CACEpC,MAAOkC,EACPG,eAAe,UACfC,UAAU,UACVT,SAAU,aACVU,aAAW,yBAEX,kBAACC,EAAA,EAAD,CAAKZ,MAAM,YAAY5B,MAAM,MAAMlB,QAAS,kBAAMqD,EAAQ3F,KAAK,gBAC/D,kBAACgG,EAAA,EAAD,CAAKZ,MAAM,cAAc5B,MAAM,QAAQlB,QAAS,kBAAMqD,EAAQ3F,KAAK,oBAIvEyF,EAAMxC,aAAe,CACnByC,WAAY,MACZC,QAAS,IAQIM,kBAAWR,G,sDCTpBS,E,2MAEJC,eAAiB,SAAC7F,GAAD,OAAQ,EAAK6B,MAAMiE,WAAW9F,I,wEAErC,IAAD,OACC1B,EAAUoG,KAAK7C,MAAfvD,MAER,OACI,kBAACyH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOpB,UAAU,WAAWqB,KAAK,QAAQR,aAAW,iBAClD,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,UAAjB,KACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YAGJ,kBAACC,EAAA,EAAD,KACGhI,EAAMR,KAAI,SAACyI,EAAMC,GAAP,OACT,kBAACL,EAAA,EAAD,CAAUM,IAAKF,EAAKvG,IAClB,kBAACoG,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAQ,GACnC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAKrG,OAChC,kBAACkG,EAAA,EAAD,CAAWC,MAAM,UAAUrI,EAAWuI,EAAK1H,YAC3C,kBAACuH,EAAA,EAAD,CAAWC,MAAM,UAAUrI,EAAWuI,EAAKzH,UAC3C,kBAACsH,EAAA,EAAD,CAAWC,MAAM,UAAU3I,EAAWE,KAAKC,OAAO0I,EAAKzH,QAAUyH,EAAK1H,WAAa,OACnF,kBAACuH,EAAA,EAAD,CAAWC,MAAM,UACf,kBAAC7D,EAAA,EAAD,CAAQiC,QAAQ,aACZ,kBAAC,IAAD,CAAMiC,GAAE,iBAAYH,EAAKvG,KAAzB,UAKN,kBAACoG,EAAA,EAAD,CAAWC,MAAM,UACf,kBAAC7D,EAAA,EAAD,CAAQiC,QAAQ,YAAYzC,QAAS,kBAAM,EAAK6D,eAAeU,EAAKvG,MAApE,sB,GArCGiF,aAgDvBW,EAASjD,aAAe,CACtBrE,MAAO,GACPwH,WAAY,cAYd,IAEeZ,eAFS,SAAC,GAAD,MAA2B,CAAE5G,MAA7B,EAAGoC,MAASpC,SAEI,CAAEwH,WFhFhB,SAAC9F,GAAD,MAAS,CAAEgB,KAAM,SAAUhB,QEgFtCkF,CAAyCU,G,QCtElDe,GAAQ,SAAC,GAAD,IAAGrI,EAAH,EAAGA,MAAsBsI,EAAzB,EAAU/G,cAAV,OACZ,6BACE,kBAAC,IAAD,CACEgH,MAAO,IACPC,OAAQ,IACRC,KAAM1I,EAAmBC,GACzB0I,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOtG,KAAK,SAASuG,OAAQ,CAAC,EAAG,MACjC,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKD,QAAQ,UAAUE,KAAK,aAE9B,yBAAK5C,UAAU,YACb,kBAACpC,EAAA,EAAD,CAAQiC,QAAQ,YAAYzC,QAAS,kBAAM4E,MAA3C,eAKND,GAAMhE,aAAe,CACnBrE,MAAO,GACPuB,cAAe,cAYjB,IAEeqF,gBAFS,SAAC,GAAD,MAA2B,CAAE5G,MAA7B,EAAGoC,MAASpC,SAEI,CAAEuB,cH/Cb,iBAAO,CAAEmB,KAAM,cG+C7BkE,CAA4CyB,I,kDClD5C,SAASc,KACtB,OACE,yBAAK7C,UAAU,aAAf,kBAEE,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAM8B,GAAG,aAAT,gBCeR,IAAMgB,GAAYC,aAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZ3H,MAAO,CACL4H,SAAU,MAIRC,GAAO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACRzB,EAD2B,EAAZjI,MACF2J,MAAK,qBAAGjI,KAAgBgI,EAAME,OAAOlI,MAElDmI,EAAUT,KAEhB,OAAOnB,EACL,kBAAC6B,GAAA,EAAD,CAAMxD,UAAWuD,EAAQP,MACvB,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAY7D,QAAQ,KAAK8D,UAAU,KAAK9F,MAAM,gBAAgB+F,cAAY,GACvEjC,EAAKrG,OAER,kBAAC6F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOpB,UAAU,YAAYqB,KAAK,QAAQR,aAAW,iBACnD,kBAACa,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CAAUM,IAAI,SACZ,kBAACL,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAQrI,EAAWuI,EAAK1H,aAE3C,kBAACsH,EAAA,EAAD,CAAUM,IAAI,OACZ,kBAACL,EAAA,EAAD,CAAWC,MAAM,QAAjB,OACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAQrI,EAAWuI,EAAKzH,WAE3C,kBAACqH,EAAA,EAAD,CAAUM,IAAI,YACZ,kBAACL,EAAA,EAAD,CAAWC,MAAM,QAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAQ3I,EAAWE,KAAKC,OAAO0I,EAAKzH,QAAUyH,EAAK1H,WAAa,YAM3F,kBAAC4J,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CAAQyD,KAAK,SACX,kBAAC,IAAD,CAAMS,GAAG,aAAT,WAMH,kBAACe,GAAD,OAGPM,GAAKpF,aAAe,CAClBqF,MAAO,GACP1J,MAAO,IAaT,IAEe4G,gBAFS,SAAC,GAAD,MAA2B,CAAE5G,MAA7B,EAAGoC,MAASpC,SAErB4G,CAAyB6C,ICzDzBW,GArBH,kBACV,yBAAK9D,UAAU,OACb,kBAAC,IAAD,CAAO+D,KAAK,QAAQJ,UAAW3F,IAC/B,kBAACgG,EAAA,EAAD,CAAOC,QAAM,GACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOF,KAAK,aACV,kBAAC,EAAD,CAAOvD,WAAW,QAClB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOuD,KAAK,eACV,kBAAC,EAAD,CAAOvD,WAAW,UAClB,kBAAC0D,GAAD,OAEF,kBAAC,IAAD,CAAOH,KAAK,aAAaJ,UAAWR,KACpC,kBAAC,IAAD,CAAOY,KAAK,WAAWJ,UAAWd,KAClC,kBAAC,IAAD,CAAUf,GAAG,kBCjBfqC,GAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,kBAAC,IAAD,CAAUhI,MAAOA,GACf,kBAAC,IAAD,KACE,kBAACiI,GAAD,CAAUC,KAAK,WAGnBN,M","file":"static/js/main.20935c49.chunk.js","sourcesContent":["/* eslint-disable no-restricted-syntax */\nimport { v4 } from 'uuid';\n\nconst leadingZero = (n) => (`${n}`.length === 1 ? `0${n}` : `${n}`);\n\nconst startOfCurrentDay = () => new Date().setHours(0, 0, 0, 0).valueOf();\n\nexport const getDiffInSeconds = (time) => Math.floor((Date.now() - time) / 1000);\n\nexport const formatTime = (values) => {\n  const hours = Math.floor(values / 3600);\n  const minutes = Math.floor((values % 3600) / 60);\n  const seconds = (values % 3600) % 60;\n  return [hours, minutes, seconds].map(leadingZero).join(':');\n};\n\nexport const msecs2time = (msecs) => new Date(msecs).toTimeString().replace(/GMT.*$/, '');\n\nexport const aggregateIntervals = (tasks) => {\n  const startOfDay = new Date().setHours(0, 0, 0, 0).valueOf();\n\n  const taskIntervals = tasks.reduce((arr, { startTime, endTime }) => [\n    ...arr,\n    [(startTime - startOfDay) / 60000, (endTime - startOfDay) / 60000]],\n  []);\n\n  const durations = [];\n\n  const intervals = [...Array(24)].map((v, i) => ([i * 60, i * 60 + 60]));\n\n  for (const [is, ie] of intervals) {\n    let duration = 0;\n\n    const startedInInterval = taskIntervals.reduce((arr, [s, e], i) => (\n      s >= is && s < ie ? [...arr, [s, e, i]] : arr\n    ), []);\n\n    if (startedInInterval.length > 0) {\n      for (const [s, e, i] of startedInInterval) {\n        if (e < ie) {\n          duration += e - s;\n        } else {\n          duration += ie - s;\n          taskIntervals[i] = [ie, e];\n        }\n      }\n    }\n\n    durations.push(duration);\n  }\n\n  return [...Array(24)].map((v, i) => ({\n    name: `${i + 1}`,\n    Minutes: durations[i],\n  }));\n};\n\nconst generateDuration = () => {\n  const minutes = Math.floor(Math.random() * (91 - 10) + 10);\n  return minutes * 60 * 1000;\n};\n\nconst generatePause = () => Math.floor(Math.random() * (16 - 1) + 1) * 60 * 1000;\n\nexport const generateTasks = () => {\n  const tasksNumber = Math.floor(Math.random() * (16 - 10) + 10);\n\n  let startTime = Math.floor(Math.random() * (540 - 360) + 360) * 60 * 1000 + startOfCurrentDay();\n\n  const tasks = [];\n\n  for (let i = 0; i < tasksNumber; i += 1) {\n    startTime += generatePause();\n    const endTime = startTime + generateDuration();\n\n    tasks.push({\n      id: v4(),\n      title: `task#${i + 1}`,\n      startTime,\n      endTime,\n    });\n\n    startTime = endTime;\n  }\n\n  return tasks;\n};\n","import { createStore, combineReducers } from 'redux';\nimport { v4 } from 'uuid';\n\nimport { loadState, saveState } from './localStorage';\n\nimport { generateTasks } from '../utils';\n\nconst defaultState = {\n  timer: {\n    isStarted: false,\n    startTime: 0,\n    tasks: [],\n  },\n};\n\nconst initialState = loadState() || defaultState;\n\nconst timer = (state = initialState.timer, action) => {\n  switch (action.type) {\n    case 'START': {\n      return {\n        ...state,\n        isStarted: true,\n        startTime: Date.now(),\n      };\n    }\n\n    case 'STOP': {\n      return {\n        isStarted: false,\n        startTime: 0,\n        tasks: [\n          ...state.tasks,\n          {\n            id: v4(),\n            title: action.title,\n            startTime: state.startTime,\n            endTime: Date.now(),\n          },\n        ],\n      };\n    }\n\n    case 'DELETE': {\n      return {\n        ...state,\n        tasks: state.tasks.filter(({ id }) => id !== action.id),\n      };\n    }\n\n    case 'GENERATE': {\n      return {\n        ...state,\n        tasks: generateTasks(),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({ timer });\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nstore.subscribe(() => saveState(store.getState()));\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) { /* do nothing */ }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  Button,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@material-ui/core';\n\nconst Alert = (props) => {\n  const { isOpen, message, onClick } = props;\n\n  return (\n    <Dialog open={isOpen} aria-labelledby=\"simple-dialog-title\">\n      <DialogTitle id=\"simple-dialog-title\">Error</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClick} color=\"primary\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n\nAlert.defaultProps = {\n  isOpen: false,\n  message: '',\n  onClick: () => {},\n};\n\nAlert.propTypes = {\n  isOpen: PropTypes.bool,\n  message: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport { TextField, Button } from '@material-ui/core';\n\nimport Alert from './Alert';\n\nimport { start, stop } from '../redux/actionCreators';\n\nimport { getDiffInSeconds, formatTime } from '../utils';\n\nclass TaskTimer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { isStarted, startTime } = this.props;\n\n    const counter = isStarted ? getDiffInSeconds(startTime) : 0;\n\n    this.state = { input: '', counter, error: null };\n\n    this.textInput = React.createRef();\n  }\n\n  handleInput = event => this.setState({ input: event.target.value });\n\n  handleError = () => {\n    this.setState(prev => ({ ...prev, error: null }));\n    /* TODO: figure out how to do this without 'setTimeout' */\n    setTimeout(() => this.textInput.current.focus(), 0);\n  };\n\n  handleStart = () => {\n    this.props.start();\n    this.interval = setInterval(() => {\n      this.setState(({ input, counter }) => ({ input, counter: counter + 1 }))\n    }, 1000)\n  };\n\n  handleStop = () => {\n    const { input } = this.state;\n    if (!input) return this.setState(prev => ({\n      ...prev,\n      error: new Error('Task name couldn\\'t be empty!')\n    }));\n\n    this.props.stop(input);\n\n    this.setState({ input: '', counter: 0 });\n\n    clearInterval(this.interval);\n  }\n\n  componentDidMount = () => {\n    const { isStarted, startTime } = this.props;\n    if (isStarted) {\n      this.interval = setInterval(() => {\n        const counter = Math.floor((Date.now() - startTime) / 1000);\n        this.setState(({ input }) => ({ input, counter }))\n      }, 1000)\n    }\n  }\n\n  componentWillUnmount = () => clearInterval(this.interval);\n\n  render() {\n    const startButton = <Button variant=\"contained\" onClick={this.handleStart}>START</Button>\n    const stopButton = <Button variant=\"contained\" onClick={this.handleStop}>STOP</Button>\n\n    const { isStarted } = this.props;\n    const { input, counter, error } = this.state;\n\n    return (\n      <div className=\"timer\" >\n        <Alert isOpen={!!error} message={error && error.message} onClick={this.handleError} />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Your Task\"\n          onChange={this.handleInput}\n          value={input}\n          inputRef={this.textInput}\n        />\n        <div className=\"clock\">{formatTime(counter)}</div>\n\n        { isStarted ? stopButton : startButton}\n      </div>\n    );\n  }\n}\n\nTaskTimer.defaultProps = {\n  isStarted: false,\n  startTime: 0,\n};\n\nTaskTimer.propTypes = {\n  isStarted: PropTypes.bool,\n  startTime: PropTypes.number,\n};\n\nconst mapStateToProps = ({ timer: { isStarted, startTime } }) => ({ isStarted, startTime });\n\nexport default connect(mapStateToProps, { start, stop })(TaskTimer);\n","export const start = () => ({ type: 'START' });\n\nexport const stop = (title) => ({ type: 'STOP', title });\n\nexport const deleteTask = (id) => ({ type: 'DELETE', id });\n\nexport const generateTasks = () => ({ type: 'GENERATE' });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport { Tabs, Tab } from '@material-ui/core';\n\nconst Panel = ({ currentTab, history }) => (\n  <Tabs\n    value={currentTab}\n    indicatorColor=\"primary\"\n    textColor=\"primary\"\n    onChange={() => {}}\n    aria-label=\"disabled tabs example\"\n  >\n    <Tab label=\"TASKS LOG\" value=\"log\" onClick={() => history.push('/main/log')} />\n    <Tab label=\"TASKS CHART\" value=\"chart\" onClick={() => history.push('/main/chart')} />\n  </Tabs>\n);\n\nPanel.defaultProps = {\n  currentTab: 'log',\n  history: {},\n};\n\nPanel.propTypes = {\n  currentTab: PropTypes.oneOf(['log', 'chart']),\n  history: PropTypes.shape({ push: PropTypes.func }),\n};\n\nexport default withRouter(Panel);\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\n\nimport { deleteTask } from './../redux/actionCreators';\n\nimport { formatTime, msecs2time } from '../utils';\n\nclass TasksLog extends Component {\n\n  handleDeletion = (id) => this.props.deleteTask(id);\n\n  render() {\n    const { tasks } = this.props;\n\n    return (\n        <TableContainer>\n          <Table className=\"taskslog\" size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">#</TableCell>\n                <TableCell align=\"center\">Task</TableCell>\n                <TableCell align=\"center\">Time Start</TableCell>\n                <TableCell align=\"center\">Time End</TableCell>\n                <TableCell align=\"center\">Time Spend</TableCell>\n                <TableCell align=\"center\">Info</TableCell>\n                <TableCell align=\"center\">Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tasks.map((task, index) => (\n                <TableRow key={task.id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{task.title}</TableCell>\n                  <TableCell align=\"center\">{msecs2time(task.startTime)}</TableCell>\n                  <TableCell align=\"center\">{msecs2time(task.endTime)}</TableCell>\n                  <TableCell align=\"center\">{formatTime(Math.floor((task.endTime - task.startTime) / 1000))}</TableCell>\n                  <TableCell align=\"center\">\n                    <Button variant=\"contained\">\n                        <Link to={`/tasks/${task.id}`}>\n                            INFO\n                        </Link>\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button variant=\"contained\" onClick={() => this.handleDeletion(task.id)}>DELETE</Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n    );\n  }\n}\n\nTasksLog.defaultProps = {\n  tasks: [],\n  deleteTask: () => {},\n};\n\nTasksLog.propTypes = {\n  tasks: PropTypes.arrayOf((tasks, key, component, location, propName) => {\n    if (!tasks[key]) {\n      return new Error(`${component} has received invalid prop: ${propName}`);\n    }\n  }),\n  deleteTask: PropTypes.func,\n};\n\nconst mapStateToProps = ({ timer: { tasks } }) => ({ tasks });\n\nexport default connect(mapStateToProps, { deleteTask })(TasksLog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\n\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport { generateTasks } from '../redux/actionCreators';\n\nimport { aggregateIntervals } from '../utils';\n\nconst Chart = ({ tasks, generateTasks: generate }) => (\n  <div>\n    <BarChart\n      width={850}\n      height={300}\n      data={aggregateIntervals(tasks)}\n      margin={{\n        top: 5, right: 30, left: 20, bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis type=\"number\" domain={[0, 60]} />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"Minutes\" fill=\"#8884d8\" />\n    </BarChart>\n    <div className=\"generate\">\n      <Button variant=\"contained\" onClick={() => generate()}>GENERATE</Button>\n    </div>\n  </div>\n);\n\nChart.defaultProps = {\n  tasks: [],\n  generateTasks: () => {},\n};\n\nChart.propTypes = {\n  tasks: PropTypes.arrayOf((tasks, key, component, location, propName) => {\n    if (!tasks[key]) {\n      return new Error(`${component} has received invalid prop: ${propName}`);\n    }\n  }),\n  generateTasks: PropTypes.func,\n};\n\nconst mapStateToProps = ({ timer: { tasks } }) => ({ tasks });\n\nexport default connect(mapStateToProps, { generateTasks })(Chart);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <div className=\"not-found\">\n      Page Not Found!\n      <div className=\"to-main-link\">\n        <Link to=\"/main/log\">\n          GO TO MAIN\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport {\n  makeStyles,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\n\nimport NotFound from './NotFound';\n\nimport { formatTime, msecs2time } from '../utils';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n  },\n});\n\nconst Task = ({ match, tasks }) => {\n  const task = tasks.find(({ id }) => id === match.params.id);\n\n  const classes = useStyles();\n\n  return task ? (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\" gutterBottom>\n          {task.title}\n        </Typography>\n        <TableContainer>\n          <Table className=\"task-card\" size=\"small\" aria-label=\"a dense table\">\n            <TableBody>\n              <TableRow key=\"start\">\n                <TableCell align=\"left\">Start</TableCell>\n                <TableCell align=\"left\">{msecs2time(task.startTime)}</TableCell>\n              </TableRow>\n              <TableRow key=\"end\">\n                <TableCell align=\"left\">End</TableCell>\n                <TableCell align=\"left\">{msecs2time(task.endTime)}</TableCell>\n              </TableRow>\n              <TableRow key=\"duration\">\n                <TableCell align=\"left\">Duration</TableCell>\n                <TableCell align=\"left\">{formatTime(Math.floor((task.endTime - task.startTime) / 1000))}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">\n          <Link to=\"/main/log\">\n            BACK\n          </Link>\n        </Button>\n      </CardActions>\n    </Card>\n  ) : (<NotFound />);\n};\n\nTask.defaultProps = {\n  match: {},\n  tasks: [],\n};\n\nTask.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ id: PropTypes.string }),\n  }),\n  tasks: PropTypes.arrayOf((tasks, key, component, location, propName) => {\n    const { id } = tasks[key];\n    if (!id) return new Error(`${component} has received invalid prop: ${propName}`);\n  }),\n};\n\nconst mapStateToProps = ({ timer: { tasks } }) => ({ tasks });\n\nexport default connect(mapStateToProps)(Task);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport TaskTimer from './components/TaskTimer';\nimport Panel from './components/Panel';\nimport TaskLog from './components/TasksLog';\nimport TasksChart from './components/TasksChart';\nimport Task from './components/Task';\nimport NotFound from './components/NotFound';\n\nconst App = () => (\n  <div className=\"App\">\n    <Route path=\"/main\" component={TaskTimer} />\n    <Paper square>\n      <Switch>\n        <Route path=\"/main/log\">\n          <Panel currentTab=\"log\" />\n          <TaskLog />\n        </Route>\n        <Route path=\"/main/chart\">\n          <Panel currentTab=\"chart\" />\n          <TasksChart />\n        </Route>\n        <Route path=\"/tasks/:id\" component={Task} />\n        <Route path=\"/default\" component={NotFound} />\n        <Redirect to=\"/main/log\" />\n      </Switch>\n    </Paper>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport TimerApp from './TimerApp';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <TimerApp test=\"test\" />\n    </Router>\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}